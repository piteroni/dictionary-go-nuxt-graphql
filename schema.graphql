type Pokemon {
  id: String!
  nationalNo: Int!
  name: String!
  imageURL: String!
  species: String!
  height: String!
  weight: String!
  genders: [Gender!]!
  types: [Type!]!
  characteristics: [Characteristic!]!
  description: Description!
  ability: Ability!
  canEvolution: Boolean!
}

type Evolutions {
  pokemons: [Pokemon!]!
}

type Gender {
  name: String!
  iconURL: String!
}

type Type {
  name: String!
  iconURL: String!
}

type Characteristic {
  name: String!
  description: String!
}

type Description {
  text: String!
  series: String!
}

type Ability {
  heart: Int!
  attack: Int!
  defense: Int!
  specialAttack: Int!
  specialDefense: Int!
  speed: Int!
}

type PageInfo {
  prevId: Int!
  nextId: Int!
  hasPrev: Boolean!
  hasNext: Boolean!
}

type PokemonConnection {
  nextID: Int!
  items: [Pokemon!]!
}

type IllegalArguments {
  message: String!
}

type PokemonNotFound {
  message: String!
}

union PokemonResult = Pokemon | PokemonNotFound
union EvolutionsResult = Evolutions | PokemonNotFound
union PageInfoResult = PageInfo | PokemonNotFound
union PokemonConnectionResult = PokemonConnection | IllegalArguments | PokemonNotFound

type Query {
  pokemon(pokemonId: String!): PokemonResult!
  evolutions(pokemonId: String!): EvolutionsResult!
  pageInfo(pokemonId: String!): PageInfoResult!
  pokemons(first: Int, after: String): PokemonConnectionResult!
}
