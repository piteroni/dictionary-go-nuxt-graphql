version: "3"

services:
  graphql:
    build:
      context: ./dictionary-graphql
      dockerfile: Dockerfile
      target: dev
    command: air -c .air.toml
    depends_on:
      - db
    hostname: graphql
    volumes:
      - ./dictionary-graphql:/app
      - ./schema.graphql:/schema.graphql
    ports:
      - 8080:8080
    restart: always
    environment:
      DB_USERNAME: root
      DB_PASSWORD: password
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: dictionary_go_nuxt_graphql
      ALLOW_ORIGINS: '["http://localhost:3000"]'
  db:
    build:
      context: ./
      dockerfile: db.Dockerfile
    hostname: db
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    volumes:
      - 7ca68c27cf80449e54cbf07c:/var/lib/mysql
      - 11eaa23ef3c226f65104912e:/var/run/mysqld
      - ./dbaccess.cnf:/dbaccess.cnf
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: dictionary_go_nuxt_graphql
      MYSQL_ROOT_PASSWORD: password
  application-ui:
    build: 
      context: ./dictionary-application-ui
      dockerfile: Dockerfile
      target: dev
      args:
        - HTTP_ENDPOINT=http://graphql:8080/graphql
        - BROWSER_HTTP_ENDPOINT=http://localhost:8080/graphql
    command: yarn dev
    depends_on:
      - graphql
    hostname: application-ui
    volumes:
      - ./dictionary-application-ui:/app
      - 05b1be63bda84a6eba2ff7c6:/app/node_modules
      - ./schema.graphql:/schema.graphql
    ports:
      - 3000:3000

volumes:
  # database data
  7ca68c27cf80449e54cbf07c:
  # database socket
  11eaa23ef3c226f65104912e:
  # node modules
  05b1be63bda84a6eba2ff7c6:
